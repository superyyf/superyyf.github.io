<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Linux设备驱动中的阻塞与非阻塞I/O on Play With YYF</title>
    <link>https://yyf.zone/categories/linux%E8%AE%BE%E5%A4%87%E9%A9%B1%E5%8A%A8%E4%B8%AD%E7%9A%84%E9%98%BB%E5%A1%9E%E4%B8%8E%E9%9D%9E%E9%98%BB%E5%A1%9Ei/o/</link>
    <description>Recent content in Linux设备驱动中的阻塞与非阻塞I/O on Play With YYF</description>
    <image>
      <url>https://yyf.zone/papermod-cover.png</url>
      <link>https://yyf.zone/papermod-cover.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://yyf.zone/categories/linux%E8%AE%BE%E5%A4%87%E9%A9%B1%E5%8A%A8%E4%B8%AD%E7%9A%84%E9%98%BB%E5%A1%9E%E4%B8%8E%E9%9D%9E%E9%98%BB%E5%A1%9Ei/o/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>阻塞与非阻塞I/O</title>
      <link>https://yyf.zone/notes/2023-2-12-blockio/</link>
      <pubDate>Sun, 12 Feb 2023 17:01:33 +0800</pubDate>
      
      <guid>https://yyf.zone/notes/2023-2-12-blockio/</guid>
      <description>阻塞与非阻塞I/O 阻塞操作是指在执行设备操作时，若不能获得资源，则挂起进程直到满足可操作的条件后再进行操作。被挂起的进程进入睡眠状态，被从调度器的运行队列移走，直到等待的条件被满足。而非阻塞操作的进程在不能进行设备操作时，并不挂起，它要么放弃，要么不停的查询，直到可以进行操作为止。
等待队列 在Linux驱动程序中，可以使用等待队列（Wait Queue）来实现阻塞进程的唤醒。它以队列为基础数据结构，与进程调度机制紧密结合，可以用来同步对系统资源的访问，信号量在内核中也依赖等待队列来实现。
定义和初始化等待队列 wait_queue_head_t my_queue; /* 定义等待队列头部 */ init_waitqueue_head(&amp;amp;my_queue); /* 初始化等待队列头部 */ DECLARE_WAIT_QUEUE_HEAD(name) /* 定义并初始化等待队列头部的宏 */ 定义和添加/移除等待队列 void add_wait_queue(struct wait_queue_head *wq_head, struct wait_queue_entry *wq_entry); void remove_wait_queue(struct wait_queue_head *wq_head, struct wait_queue_entry *wq_entry); DECLARE_WAITQUEUE(name, tsk) 等待事件 /** * wait_event - sleep until a condition gets true * @wq_head: the waitqueue to wait on * @condition: a C expression for the event to wait for * * The process is put to sleep (TASK_UNINTERRUPTIBLE) until the * @condition evaluates to true.</description>
    </item>
    
  </channel>
</rss>
